<templateSet group="PHP">
  <template name="dd" value="dd($VALUE$);$END$" description="dd" toReformat="false" toShortenFQNames="true">
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="tesf" value="/** @test */&#10;public function $FUNCTION$() &#10;{&#10;    $END$&#10;}" description="Test function" toReformat="false" toShortenFQNames="true">
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="ddf" value="dd(__FILE__ . ':' . __LINE__);$END$" description="ddf" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="try" value="try {&#10;    $TRY$&#10;} catch ($EXCEPTION$ $e) {&#10;    $CATCH$&#10;}" description="try/catch" toReformat="false" toShortenFQNames="true">
    <variable name="TRY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="EXCEPTION" expression="" defaultValue="\Exception" alwaysStopAt="true" />
    <variable name="CATCH" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="formvalid" value="if ($form-&gt;isSubmitted()) {&#10;    try {&#10;        $form-&gt;validate();&#10;        /** @var $TYPE$ $data */&#10;        $data = $form-&gt;getData();&#10;        &#10;        $END$&#10;    } catch (ValidationException $e) {&#10;        $this-&gt;setValidationException($e, $form);&#10;    }&#10;}" description="Validate a Ride form" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="__" value="{{ __('$LABEL$') }}$END$" description="Translate" toReformat="false" toShortenFQNames="true">
    <variable name="LABEL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="fld" value="'$FIELD$' =&gt; $this-&gt;$FIELD$,$END$" description="Array field" toReformat="false" toShortenFQNames="true">
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="fn" value="function ($ARGS$) {&#10;    $END$&#10;}" description="function" toReformat="false" toShortenFQNames="true">
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="/t" value="// todo: $END$" description="todo" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="/n" value="// note: $END$" description="note" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="sc" value="public static function $NAME$($ARGS$): $RETURN_TYPE$&#10;{&#10;    return new self($VARS$);&#10;}$END$" description="static constructor" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="enum(&quot;new&quot;, &quot;create&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="VARS" expression="groovyScript(&quot;input&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="//" value="// input: $input$&#10;// output: $output$" toReformat="false" toShortenFQNames="true">
    <variable name="input" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="output" expression="groovyScript(&quot;def input = 'oo $bar, $bar, ?int $a'; def matcher = input =~ /\$[\w]+/; def String output = ''; int count = 0; while (matcher.find()) { count++; }; matcher.reset(); int i = 0; while (matcher.find()) { output += matcher.group(); i++; if (i &lt; count) { output += ', '; } }; output;&quot;) " defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>